name: Deploy Resources

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.9.5
        terraform_wrapper: false

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Terraform Init
      run: terraform -chdir=./tf init

    - name: Terraform Apply
      run: terraform -chdir=./tf apply -auto-approve

    - name: Save outputs in env variables
      run: |
        cd tf
        echo "resource_group_name=$(terraform output -raw resource_group_name)" >> $GITHUB_ENV
        echo "aks_cluster_name=$(terraform output -raw aks_cluster_name)" >> $GITHUB_ENV
        echo "container_registry_name=$(terraform output -raw container_registry_name)" >> $GITHUB_ENV
  
    - name: Enable Routing Add-on with NGINX
      run: |
        az aks approuting enable --resource-group $resource_group_name --name $aks_cluster_name
    
    - name: Set up kubectl for AKS
      run: |
        az aks get-credentials --resource-group $resource_group_name --name $aks_cluster_name

    - name: Set Up Docker Build Variables
      run: echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Log in to Azure Container Registry
      run: |
        az acr login -n $container_registry_name

    - name: Build Docker Image
      run: docker build -t $container_registry_name.azurecr.io/my-app:${{ env.IMAGE_TAG }} .

    - name: Push Docker Image to ACR
      run: |
        docker push $container_registry_name.azurecr.io/my-app:${{ env.IMAGE_TAG }}
      
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f deployment.yml
        kubectl apply -f ingress.yaml